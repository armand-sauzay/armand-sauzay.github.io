<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Armand Sauzay</title>
    <link>//localhost:1313/</link>
    <description>Recent content on Armand Sauzay</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Dec 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Note ‚úçÔ∏è</title>
      <link>//localhost:1313/projects/note/</link>
      <pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/projects/note/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/projects/note/demo.gif&#34; alt=&#34;Note Demo&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A modern terminal-based note-taking application built with &lt;a href=&#34;https://github.com/charmbracelet/bubbletea&#34;&gt;Bubble Tea&lt;/a&gt; and &lt;a href=&#34;https://github.com/charmbracelet/lipgloss&#34;&gt;Lip Gloss&lt;/a&gt;. Organize your thoughts with style right from your terminal.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-features&#34;&gt;‚ú® Features&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;üìù Create and edit markdown notes&lt;/li&gt;&#xA;&lt;li&gt;üóÇÔ∏è Organize notes in folders&lt;/li&gt;&#xA;&lt;li&gt;üé® Beautiful TUI with syntax highlighting&lt;/li&gt;&#xA;&lt;li&gt;üì± Responsive layout with adjustable sidebar&lt;/li&gt;&#xA;&lt;li&gt;üóëÔ∏è Archive unused notes&lt;/li&gt;&#xA;&lt;li&gt;‚å®Ô∏è Vim-style keybindings&lt;/li&gt;&#xA;&lt;li&gt;üéØ Focus mode without sidebar&lt;/li&gt;&#xA;&lt;li&gt;üîç Preview markdown rendering&lt;/li&gt;&#xA;&lt;li&gt;‚ö° Fast and lightweight&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-installation&#34;&gt;üì¶ Installation&lt;/h2&gt;&#xA;&lt;h3 id=&#34;using-homebrew-macos--linux&#34;&gt;Using Homebrew (macOS &amp;amp; Linux)&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew tap armand-sauzay/homebrew-tap&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install note&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;using-go&#34;&gt;Using Go&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go install github.com/armand-sauzay/note@latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;from-source&#34;&gt;From Source&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/armand-sauzay/note.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; note&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go install .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-usage&#34;&gt;üöÄ Usage&lt;/h2&gt;&#xA;&lt;h2 id=&#34;-configuration&#34;&gt;‚öôÔ∏è Configuration&lt;/h2&gt;&#xA;&lt;h3 id=&#34;keybindings&#34;&gt;Keybindings&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;j/k&lt;/code&gt; or &lt;code&gt;‚Üë/‚Üì&lt;/code&gt;: Navigate notes&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;h/l&lt;/code&gt; or &lt;code&gt;‚Üê/‚Üí&lt;/code&gt;: Collapse/expand folders&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;enter&lt;/code&gt;: Edit note/rename folder&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;n&lt;/code&gt;: Create new note&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;N&lt;/code&gt;: Create new folder&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;tab&lt;/code&gt;: Toggle sidebar&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;backspace&lt;/code&gt;: Archive note/folder&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;q&lt;/code&gt; or &lt;code&gt;ctrl+c&lt;/code&gt;: Quit&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-contributing&#34;&gt;ü§ù Contributing&lt;/h2&gt;&#xA;&lt;p&gt;Contributions are welcome! Please feel free to submit a Pull Request.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Which Data Format to Use For Your Big Data Project?</title>
      <link>//localhost:1313/articles/big-data-formats/</link>
      <pubDate>Thu, 26 Oct 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/articles/big-data-formats/</guid>
      <description>&lt;p&gt;Choosing the right data format is crucial in Data Science projects, impacting everything from data read/write speeds to memory consumption and interoperability. This article explores seven popular serialization/deserialization formats in Python, focusing on their speed and memory usage implications.&lt;/p&gt;&#xA;&lt;p&gt;Through the analysis, we&amp;rsquo;ll also see how we can use profiling in Python (using the &lt;code&gt;cProfile&lt;/code&gt; built-in module) and how we can get statistics on memory usage for specific files in your filesystem (using the &lt;code&gt;os&lt;/code&gt; Python module).&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Properly Setup Your Python Project</title>
      <link>//localhost:1313/articles/python-project-setup/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/articles/python-project-setup/</guid>
      <description>&lt;p&gt;As you start working on your python project, you will likely need to set it up&#xA;in a consistent and collaboration-friendly way. In this article, I&amp;rsquo;ll describe a&#xA;setup that works great for my projects. It includes many industry best practices&#xA;and aims at explaining how to install python, run automated checks in a GitOps&#xA;fashion and structure your project.&lt;/p&gt;&#xA;&lt;p&gt;This article covers quite a few topics. To ease the reading, I&amp;rsquo;ve split each topic into two parts:&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Beginner&#39;s Guide to Cryptography</title>
      <link>//localhost:1313/articles/intro-to-cryptography/</link>
      <pubDate>Mon, 13 Feb 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/articles/intro-to-cryptography/</guid>
      <description>&lt;p&gt;What&amp;rsquo;s cryptography? What does hashing and public-key encryption mean? And which tool can you use to start writing cryptography code?&lt;/p&gt;&#xA;&lt;p&gt;You probably heard the name cryptography a lot recently, especially during the cryptocurrency bull market of 2021, or with the recent FTX saga. But what does it really mean? Is it useful? And how can you start using some cryptography yourself?&lt;/p&gt;&#xA;&lt;p&gt;As always, we&amp;rsquo;ll go through a little bit of theory and the concepts behind before diving into some code to give a concrete example. &lt;strong&gt;As Steve Jobs once said:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How Fair are Your Machine Learning Models?</title>
      <link>//localhost:1313/articles/how-fair-are-your-machine-learning-models/</link>
      <pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/articles/how-fair-are-your-machine-learning-models/</guid>
      <description>&lt;p&gt;A quick introduction to the topic of fairness with hands on coding. Evaluate your machine learning model fairness in just a few lines of code.&lt;/p&gt;&#xA;&lt;p&gt;Are Machine Learning models &amp;ldquo;fair&amp;rdquo;? When increasingly more decisions are backed by ML algorithms, it becomes important to understand the biases they can create.&lt;/p&gt;&#xA;&lt;p&gt;But what does &amp;ldquo;fairness&amp;rdquo; mean? This is where it gets a little political (and mathematical)‚Ä¶ To illustrate our thoughts, we&amp;rsquo;ll take the example of a machine learning model which predicts whether a salary should be higher than 50K/year based on a number of features including &lt;strong&gt;age&lt;/strong&gt; and &lt;strong&gt;gender&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SHAP values: Machine Learning Interpretability Made Easy</title>
      <link>//localhost:1313/articles/shap-values/</link>
      <pubDate>Sat, 25 Jun 2022 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/articles/shap-values/</guid>
      <description>&lt;p&gt;Machine Learning interpretability is becoming increasingly important, especially as ML algorithms are getting more complex.&lt;/p&gt;&#xA;&lt;p&gt;How good is your Machine Learning algorithm if it cant be explained? Less performant but explainable models (like linear regression) are sometimes preferred over more performant but black box models (like XGBoost or Neural Networks). This is why research around machine learning explainability (aka eXplainable AI or XAI) has recently been a growing field with amazing projects like SHAP emerging.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Enhance Your CI Workflow with Pre-Commit Checks</title>
      <link>//localhost:1313/articles/pre-commit-checks/</link>
      <pubDate>Tue, 07 Jun 2022 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/articles/pre-commit-checks/</guid>
      <description>&lt;p&gt;We&amp;rsquo;ve all encountered commit messages like &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;modif&lt;/code&gt;, or &lt;code&gt;reran notebook&lt;/code&gt;. These vague messages make navigating the commit history unnecessarily challenging. Additionally, inconsistent file formatting can cause friction in collaborative environments, leading to wasted time resolving trivial issues after commits.&lt;/p&gt;&#xA;&lt;p&gt;Fortunately, you can proactively address these problems with &lt;strong&gt;pre-commit checks&lt;/strong&gt;, ensuring both commit messages and file formats are correct &lt;strong&gt;before&lt;/strong&gt; they reach your repository.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-are-pre-commit-checks&#34;&gt;What are Pre-Commit Checks?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Pre-commit checks&lt;/strong&gt; are automated scripts executed right before you commit code. They enforce predefined standards, such as file formatting rules (e.g., Python‚Äôs Black formatter) and structured commit messages (like Conventional Commits). By catching issues early, pre-commit checks help maintain a clean, readable, and consistent codebase.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
